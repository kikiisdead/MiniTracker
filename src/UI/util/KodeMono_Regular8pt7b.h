#pragma once
#include "daisy.h"
#include "../../../DaisySeedGFX2/cDisplay.h"

const uint8_t KodeMono_Regular8pt7bBitmaps[] = {
  0x00, 0xAA, 0xAA, 0x0C, 0xBB, 0xBB, 0x32, 0x22, 0x26, 0xFF, 0x24, 0x64,
  0x44, 0xFE, 0x48, 0x48, 0xC8, 0x10, 0xFB, 0x1C, 0x08, 0x18, 0x1F, 0x01,
  0x02, 0x06, 0x0B, 0xF1, 0x02, 0x00, 0x60, 0xB0, 0xD0, 0xC0, 0xC0, 0x40,
  0x40, 0x60, 0x60, 0x21, 0x21, 0xF0, 0xE0, 0x3E, 0x11, 0x09, 0x87, 0x81,
  0x81, 0xC1, 0xB7, 0x8B, 0xC3, 0x63, 0x9F, 0x60, 0xF0, 0x19, 0x99, 0x8C,
  0x63, 0x18, 0xC6, 0x30, 0x82, 0x08, 0x20, 0xC3, 0x0C, 0x30, 0x84, 0x21,
  0x08, 0x42, 0x33, 0x33, 0x00, 0x23, 0xB7, 0x9C, 0xD8, 0x20, 0x82, 0x3F,
  0x20, 0x80, 0xF5, 0x80, 0xF8, 0xF0, 0x0C, 0x20, 0x86, 0x10, 0x43, 0x08,
  0x21, 0x84, 0x10, 0xC2, 0x08, 0x00, 0x7D, 0x86, 0x0C, 0x38, 0xF3, 0x6C,
  0xF1, 0xC3, 0x85, 0xF0, 0x10, 0x63, 0x42, 0x81, 0x02, 0x04, 0x08, 0x10,
  0x23, 0xF8, 0x7D, 0x84, 0x08, 0x10, 0x41, 0x04, 0x10, 0x41, 0x03, 0xF8,
  0xFE, 0x0C, 0x30, 0x41, 0x03, 0x81, 0x81, 0x02, 0x07, 0xF0, 0x0E, 0x1E,
  0x36, 0x66, 0xC6, 0x86, 0x7F, 0x06, 0x06, 0x06, 0x06, 0xFF, 0x02, 0x07,
  0xC7, 0xC0, 0xC0, 0x81, 0x02, 0x07, 0xF0, 0x7D, 0x82, 0x04, 0x08, 0x17,
  0xF0, 0xC1, 0x82, 0x8D, 0xF0, 0xFE, 0x04, 0x18, 0x61, 0x86, 0x18, 0x30,
  0x60, 0xC1, 0x80, 0x3C, 0xC7, 0x0C, 0x14, 0x6F, 0x91, 0xC1, 0x83, 0x8D,
  0xF0, 0x7D, 0x0A, 0x0E, 0x14, 0x27, 0xC0, 0x81, 0x02, 0x09, 0xF0, 0xF0,
  0x3F, 0xF0, 0x0F, 0xF8, 0x08, 0xCC, 0xCC, 0x20, 0x82, 0x08, 0xFF, 0xF0,
  0x3F, 0x82, 0x08, 0x20, 0x8C, 0xCC, 0xC0, 0x7C, 0xC6, 0x83, 0x02, 0x04,
  0x08, 0x10, 0x10, 0x00, 0x00, 0x18, 0x3E, 0x30, 0xF0, 0x31, 0x99, 0x2D,
  0x96, 0xCB, 0x3F, 0x80, 0x20, 0x0F, 0x87, 0xC0, 0x3E, 0xC7, 0x0E, 0x1C,
  0x3F, 0xF0, 0xE1, 0xC3, 0x87, 0x08, 0xFF, 0x87, 0x0E, 0x2C, 0x9F, 0xB0,
  0xE1, 0xC3, 0x87, 0xF8, 0x7D, 0x87, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0,
  0x85, 0xF8, 0xFD, 0x8B, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0xF8,
  0x7F, 0x82, 0x04, 0x08, 0x1F, 0x20, 0x40, 0x81, 0x81, 0xF8, 0x7F, 0x83,
  0x06, 0x0C, 0x1F, 0x30, 0x60, 0xC1, 0x83, 0x00, 0x7D, 0x0E, 0x04, 0x08,
  0x11, 0xE0, 0xC1, 0x83, 0x85, 0xF8, 0x83, 0x06, 0x0C, 0x18, 0x3F, 0xE0,
  0xC1, 0x83, 0x06, 0x08, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10,
  0x23, 0xF8, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x31, 0x9C, 0xC1,
  0xE1, 0x31, 0x19, 0x0D, 0x07, 0x43, 0x11, 0x8C, 0xC2, 0x60, 0xB0, 0x60,
  0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x85, 0xF8, 0xC7, 0x9E,
  0xAD, 0x99, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x08, 0xE3, 0x66, 0x4C, 0x58,
  0xF0, 0xE0, 0xC1, 0x83, 0x06, 0x08, 0x7D, 0x86, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x85, 0xF0, 0xFD, 0x87, 0x0E, 0x1C, 0x3F, 0xA0, 0x40, 0x81,
  0x02, 0x00, 0x7D, 0x86, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x8B, 0x89, 0xF8,
  0x10, 0xFD, 0x0E, 0x0C, 0x1C, 0x77, 0xA1, 0x41, 0x83, 0x06, 0x08, 0x7D,
  0x86, 0x04, 0x04, 0x0F, 0xC0, 0x81, 0x03, 0x05, 0xF8, 0xFF, 0x10, 0x10,
  0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x83, 0x06, 0x0C, 0x18,
  0x30, 0x60, 0xC1, 0x83, 0x85, 0xF8, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xE1, 0x44, 0x50, 0xC0, 0x83, 0x06, 0x0C, 0x18, 0x32, 0x64, 0xC9, 0x93,
  0x75, 0xB8, 0x83, 0x06, 0x0E, 0x34, 0xC7, 0x98, 0xE1, 0x83, 0x06, 0x08,
  0x83, 0x85, 0x09, 0x23, 0x82, 0x04, 0x08, 0x10, 0x20, 0x40, 0xFE, 0x04,
  0x08, 0x30, 0x43, 0x8C, 0x30, 0xC1, 0x03, 0xF8, 0xFE, 0x31, 0x8C, 0x63,
  0x18, 0xC6, 0x31, 0x8C, 0x63, 0xE0, 0x82, 0x0C, 0x10, 0x41, 0x82, 0x08,
  0x10, 0x41, 0x02, 0x08, 0x20, 0xC0, 0xF8, 0x42, 0x10, 0x84, 0x21, 0x08,
  0x42, 0x10, 0x87, 0xE0, 0x18, 0x70, 0xB3, 0x24, 0x70, 0x40, 0xFF, 0x8E,
  0x30, 0x7C, 0xFC, 0x08, 0x13, 0xEC, 0x70, 0xE1, 0x7E, 0xC1, 0x83, 0x06,
  0x0F, 0xD8, 0x70, 0xE1, 0xC3, 0x87, 0x0F, 0xE0, 0x7D, 0x87, 0x06, 0x0C,
  0x18, 0x10, 0xBE, 0x02, 0x04, 0x08, 0x17, 0xF8, 0x70, 0xE1, 0xC3, 0x85,
  0x0B, 0xF0, 0x7D, 0x06, 0x17, 0xC8, 0x10, 0x30, 0xBE, 0x3E, 0xC5, 0x83,
  0x06, 0x1F, 0x98, 0x30, 0x60, 0xC1, 0x80, 0x3A, 0x8F, 0x0E, 0x1C, 0x6F,
  0x30, 0x3F, 0x43, 0x87, 0x1B, 0xE0, 0x81, 0x02, 0x04, 0x0F, 0xD0, 0x60,
  0xC1, 0x83, 0x06, 0x0C, 0x10, 0x10, 0x20, 0x00, 0x06, 0x0E, 0x04, 0x08,
  0x10, 0x20, 0x40, 0x8F, 0xE0, 0x10, 0x80, 0x03, 0x9C, 0x21, 0x08, 0x42,
  0x11, 0x9B, 0x80, 0x81, 0x02, 0x04, 0x68, 0x92, 0x2E, 0x64, 0x85, 0x0E,
  0x0C, 0x10, 0xE0, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
  0x70, 0xFE, 0x92, 0x93, 0x93, 0x83, 0x83, 0x83, 0x83, 0xFD, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x7D, 0x06, 0x0C, 0x18, 0x30, 0x50, 0xBE, 0xFD,
  0x06, 0x0C, 0x18, 0x30, 0x70, 0xDE, 0x81, 0x02, 0x00, 0x7F, 0x06, 0x0C,
  0x18, 0x30, 0x70, 0xBF, 0x02, 0x04, 0x08, 0xFE, 0x44, 0x81, 0x02, 0x04,
  0x08, 0x7C, 0x7F, 0x8B, 0x03, 0xE0, 0x60, 0x50, 0xFE, 0x41, 0x04, 0x10,
  0xF9, 0x04, 0x10, 0x41, 0x04, 0x4E, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x70,
  0xBF, 0x83, 0x06, 0x0C, 0x1C, 0x28, 0x8A, 0x18, 0xC8, 0xE4, 0x72, 0x39,
  0x1C, 0x8A, 0x45, 0xF4, 0x6C, 0x83, 0x05, 0x13, 0xE2, 0x68, 0x60, 0xC1,
  0x83, 0x06, 0x0C, 0x18, 0x30, 0x50, 0xBF, 0x02, 0x0B, 0xE0, 0xFE, 0x0C,
  0x30, 0xC1, 0x04, 0x10, 0x7F, 0x3C, 0xC3, 0x0C, 0x31, 0x8C, 0x20, 0x40,
  0x83, 0x0C, 0x30, 0xC1, 0xC0, 0xFF, 0xFE, 0xE0, 0x82, 0x08, 0x20, 0x41,
  0x83, 0x18, 0xC2, 0x08, 0x20, 0x8E, 0x00, 0x22, 0xDF };

const DadGFX::GFXglyph KodeMono_Regular8pt7bGlyphs[] = {
  {     0,   1,   1,   9,    0,    0 },   // 0x20 ' '
  {     1,   2,  11,   9,    4,  -10 },   // 0x21 '!'
  {     4,   4,   4,   9,    3,  -10 },   // 0x22 '"'
  {     6,   8,  11,   9,    1,  -10 },   // 0x23 '#'
  {    17,   7,  14,   9,    1,  -11 },   // 0x24 '$'
  {    30,   9,  11,   9,    0,  -10 },   // 0x25 '%'
  {    43,   9,  11,   9,    0,  -10 },   // 0x26 '&'
  {    56,   1,   4,   9,    4,  -10 },   // 0x27 '''
  {    57,   5,  15,   9,    2,  -11 },   // 0x28 '('
  {    67,   5,  15,   9,    2,  -11 },   // 0x29 ')'
  {    77,   6,   5,   9,    2,   -7 },   // 0x2A '*'
  {    81,   6,   6,   9,    2,   -7 },   // 0x2B '+'
  {    86,   2,   5,   9,    4,   -1 },   // 0x2C ','
  {    88,   5,   1,   9,    2,   -4 },   // 0x2D '-'
  {    89,   2,   2,   9,    4,   -1 },   // 0x2E '.'
  {    90,   6,  15,   9,    2,  -11 },   // 0x2F '/'
  {   102,   7,  11,   9,    1,  -10 },   // 0x30 '0'
  {   112,   7,  11,   9,    1,  -10 },   // 0x31 '1'
  {   122,   7,  11,   9,    1,  -10 },   // 0x32 '2'
  {   132,   7,  11,   9,    1,  -10 },   // 0x33 '3'
  {   142,   8,  11,   9,    1,  -10 },   // 0x34 '4'
  {   153,   7,  11,   9,    1,  -10 },   // 0x35 '5'
  {   163,   7,  11,   9,    1,  -10 },   // 0x36 '6'
  {   173,   7,  11,   9,    1,  -10 },   // 0x37 '7'
  {   183,   7,  11,   9,    1,  -10 },   // 0x38 '8'
  {   193,   7,  11,   9,    1,  -10 },   // 0x39 '9'
  {   203,   2,   8,   9,    4,   -7 },   // 0x3A ':'
  {   205,   2,  11,   9,    4,   -7 },   // 0x3B ';'
  {   208,   5,   9,   9,    2,   -9 },   // 0x3C '<'
  {   214,   6,   4,   9,    2,   -6 },   // 0x3D '='
  {   217,   5,   9,   9,    2,   -9 },   // 0x3E '>'
  {   223,   8,  11,   9,    1,  -10 },   // 0x3F '?'
  {   234,   9,  12,   9,    0,   -9 },   // 0x40 '@'
  {   248,   7,  11,   9,    1,  -10 },   // 0x41 'A'
  {   258,   7,  11,   9,    1,  -10 },   // 0x42 'B'
  {   268,   7,  11,   9,    1,  -10 },   // 0x43 'C'
  {   278,   7,  11,   9,    1,  -10 },   // 0x44 'D'
  {   288,   7,  11,   9,    1,  -10 },   // 0x45 'E'
  {   298,   7,  11,   9,    1,  -10 },   // 0x46 'F'
  {   308,   7,  11,   9,    1,  -10 },   // 0x47 'G'
  {   318,   7,  11,   9,    1,  -10 },   // 0x48 'H'
  {   328,   7,  11,   9,    1,  -10 },   // 0x49 'I'
  {   338,   6,  12,   9,    2,  -10 },   // 0x4A 'J'
  {   347,   9,  11,   9,    0,  -10 },   // 0x4B 'K'
  {   360,   7,  11,   9,    1,  -10 },   // 0x4C 'L'
  {   370,   7,  11,   9,    1,  -10 },   // 0x4D 'M'
  {   380,   7,  11,   9,    1,  -10 },   // 0x4E 'N'
  {   390,   7,  11,   9,    1,  -10 },   // 0x4F 'O'
  {   400,   7,  11,   9,    1,  -10 },   // 0x50 'P'
  {   410,   7,  12,   9,    1,  -10 },   // 0x51 'Q'
  {   421,   7,  11,   9,    1,  -10 },   // 0x52 'R'
  {   431,   7,  11,   9,    1,  -10 },   // 0x53 'S'
  {   441,   8,  11,   9,    1,  -10 },   // 0x54 'T'
  {   452,   7,  11,   9,    1,  -10 },   // 0x55 'U'
  {   462,   7,  11,   9,    1,  -10 },   // 0x56 'V'
  {   472,   7,  11,   9,    1,  -10 },   // 0x57 'W'
  {   482,   7,  11,   9,    1,  -10 },   // 0x58 'X'
  {   492,   7,  11,   9,    1,  -10 },   // 0x59 'Y'
  {   502,   7,  11,   9,    1,  -10 },   // 0x5A 'Z'
  {   512,   5,  15,   9,    2,  -11 },   // 0x5B '['
  {   522,   6,  15,   9,    2,  -11 },   // 0x5C '\'
  {   534,   5,  15,   9,    2,  -11 },   // 0x5D ']'
  {   544,   7,   6,   9,    1,  -12 },   // 0x5E '^'
  {   550,   8,   1,   9,    1,    2 },   // 0x5F '_'
  {   551,   4,   3,   9,    3,  -12 },   // 0x60 '`'
  {   553,   7,   9,   9,    1,   -8 },   // 0x61 'a'
  {   561,   7,  12,   9,    1,  -11 },   // 0x62 'b'
  {   572,   7,   8,   9,    1,   -7 },   // 0x63 'c'
  {   579,   7,  12,   9,    1,  -11 },   // 0x64 'd'
  {   590,   7,   8,   9,    1,   -7 },   // 0x65 'e'
  {   597,   7,  11,   9,    1,  -10 },   // 0x66 'f'
  {   607,   7,  12,   9,    1,   -8 },   // 0x67 'g'
  {   618,   7,  12,   9,    1,  -11 },   // 0x68 'h'
  {   629,   7,  13,   9,    1,  -12 },   // 0x69 'i'
  {   641,   5,  15,   9,    2,  -12 },   // 0x6A 'j'
  {   651,   7,  12,   9,    1,  -11 },   // 0x6B 'k'
  {   662,   7,  12,   9,    1,  -11 },   // 0x6C 'l'
  {   673,   8,   8,   9,    1,   -7 },   // 0x6D 'm'
  {   681,   7,   8,   9,    1,   -7 },   // 0x6E 'n'
  {   688,   7,   8,   9,    1,   -7 },   // 0x6F 'o'
  {   695,   7,  11,   9,    1,   -7 },   // 0x70 'p'
  {   705,   7,  11,   9,    1,   -7 },   // 0x71 'q'
  {   715,   7,   8,   9,    1,   -7 },   // 0x72 'r'
  {   722,   7,   8,   9,    1,   -7 },   // 0x73 's'
  {   729,   6,  12,   9,    2,  -11 },   // 0x74 't'
  {   738,   7,   8,   9,    1,   -7 },   // 0x75 'u'
  {   745,   7,   8,   9,    1,   -7 },   // 0x76 'v'
  {   752,   9,   8,   9,    0,   -7 },   // 0x77 'w'
  {   761,   7,   8,   9,    1,   -7 },   // 0x78 'x'
  {   768,   7,  11,   9,    1,   -7 },   // 0x79 'y'
  {   778,   7,   8,   9,    1,   -7 },   // 0x7A 'z'
  {   785,   6,  15,   9,    2,  -11 },   // 0x7B '{'
  {   797,   1,  15,   9,    4,  -11 },   // 0x7C '|'
  {   799,   6,  15,   9,    2,  -11 },   // 0x7D '}'
  {   811,   8,   2,   9,    1,   -5 } }; // 0x7E '~'

const DadGFX::GFXCFont KodeMono_Regular8pt7b = {
  (uint8_t  *)KodeMono_Regular8pt7bBitmaps,
  (DadGFX::GFXglyph *)KodeMono_Regular8pt7bGlyphs,
  0x20, 0x7E, 20 };

// Approx. 1485 bytes
